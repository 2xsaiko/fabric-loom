apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'idea'

group = 'chorusmc.gradle'
version = '0.0.1'
sourceCompatibility = targetCompatibility = '1.8'

if (System.getenv().BUILD_NUMBER) {
    version = version + "." + "${System.getenv().BUILD_NUMBER}"
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
    maven {
        name = "Modmuss50"
        url = "http://maven.modmuss50.me/"
    }
	maven {
        name "Cuchaz"
        url 'http://maven.cuchazinteractive.com'
    }
}

configurations {
    deployerJars
    shade
    compile.extendsFrom shade
}

dependencies {
    compile gradleApi()
    shade 'org.zeroturnaround:zt-zip:1.9'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.slf4j:slf4j-simple:1.7.21'
    shade 'com.google.code.gson:gson:2.6.2'
    shade 'commons-io:commons-io:1.4'
    shade 'com.google.guava:guava:19.0'
	
	shade 'chorusmc:enigma:0.11.+'
	shade 'org.javassist:javassist:3.+'
	shade 'org.bitbucket.mstrobel:procyon-decompiler:0.5.28-enigma'
	shade 'org.javassist:javassist:3.20.0-GA'
	shade 'de.sciss:syntaxpane:1.1.+'    
}

sourceSets {
    main.compileClasspath += configurations.shade;
    main.runtimeClasspath += configurations.shade;
    test.compileClasspath += configurations.shade;
    test.runtimeClasspath += configurations.shade;
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
		if (project.hasProperty('mavenPass')){
            repository(url: "http://mavenupload.modmuss50.me/") {
                authentication(userName: "buildslave", password: project.getProperty('mavenPass'))
            }
        }
        else{ 
           repository(url: "file:///var/www/maven/")
        }
            pom {
                groupId = "chorusmc"
                version = project.version
                artifactId = project.archivesBaseName
                project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'chorus-gradle'
                    url 'https://github.com/ChorusMC/chorus-gradle'
                    scm {
                        url 'https://github.com/ChorusMC/chorus-gradle'
                        connection 'scm:git:git@github.com:ChorusMC/chorus-gradle.git'
                        developerConnection 'scm:git:git@github.com:ChorusMC/chorus-gradle.git'
                    }
                    issueManagement {
                        system 'github'
                        url 'https://github.com/ChorusMC/chorus-gradle/issues'
                    }
                    licenses {
                        license {
                            name 'License'
                            url 'https://github.com/ChorusMC/chorus-gradle/blob/master/readme.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'modmuss50'
                            name 'modmuss50'
                            roles { role 'developer' }
                        }
                    }
                }
            }
        }
    }
}
